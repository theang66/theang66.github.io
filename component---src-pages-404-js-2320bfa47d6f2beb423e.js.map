{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["Header","_ref","siteTitle","react_default","a","createElement","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","propTypes","PropTypes","string","defaultProps","Layout","children","query","render","data","Fragment","header","site","siteMetadata","title","paddingTop","Date","getFullYear","href","_755544856","node","isRequired","NotFoundPage","components_layout","seo","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","props","Consumer","object","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-2320bfa47d6f2beb423e.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>\n            Â© {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}